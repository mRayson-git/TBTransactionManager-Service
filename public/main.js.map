{"version":3,"sources":["./src/app/modules/shared/services/token-interceptor.service.ts","./src/app/modules/account/account.component.ts","./src/app/modules/account/account.component.html","./src/app/modules/shared/services/user.service.ts","./src/app/modules/account/parser-creation/parser-creation.component.ts","./src/app/modules/account/parser-creation/parser-creation.component.html","./src/app/home/home.component.ts","./src/app/modules/account/account-settings/account-settings.component.ts","./src/app/modules/account/account-settings/account-settings.component.html","./src/environments/environment.ts","./src/app/modules/budget/budget-settings.component.ts","./src/app/modules/budget/budget-settings.component.html","./src/app/modules/shared/shared.module.ts","./src/app/modules/account/register/register.component.ts","./src/app/modules/account/register/register.component.html","./src/app/modules/shared/guards/auth.guard.ts","./src/app/modules/account/login/login.component.ts","./src/app/modules/account/login/login.component.html","./src/app/modules/budget/budget.module.ts","./src/app/modules/shared/services/parser.service.ts","./src/app/modules/shared/services/message.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/modules/transaction/modal-add-transaction/modal-add-transaction.component.ts","./src/app/modules/transaction/modal-add-transaction/modal-add-transaction.component.html","./src/app/modules/transaction/transaction-list/transaction-list.component.ts","./src/app/modules/transaction/transaction-list/transaction-list.component.html","./src/app/app.module.ts","./src/app/modules/shared/services/auth.service.ts","./src/app/modules/shared/message/message.component.ts","./src/app/modules/shared/message/message.component.html","./src/app/modules/shared/validators/matching.validator.ts","./src/app/modules/transaction/transaction.component.ts","./src/app/modules/transaction/transaction.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/modules/account/parser-information/parser-information.component.ts","./src/app/modules/account/parser-information/parser-information.component.html","./src/app/modules/account/account.module.ts","./src/app/modules/shared/services/transaction.service.ts","./src/app/modules/shared/services/budget.service.ts","./src/app/modules/transaction/transaction-importer/transaction-importer.component.ts","./src/app/modules/transaction/transaction-importer/transaction-importer.component.html","./src/app/modules/budget/category-creator/category-creator.component.ts","./src/app/modules/budget/category-creator/category-creator.component.html","./src/app/app-routing.module.ts","./src/app/modules/transaction/transaction.module.ts","./src/app/modules/transaction/transaction-modal/transaction-modal.component.ts","./src/app/modules/transaction/transaction-modal/transaction-modal.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor } from '@angular/common/http';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenInterceptorService implements HttpInterceptor {\r\n\r\n  constructor(private auth: AuthService) { }\r\n\r\n  intercept(req, next): any {\r\n    const tokenizedReq = req.clone({\r\n      setHeaders: {\r\n        Authorization: 'Bearer ' + this.auth.getToken()\r\n      }\r\n    });\r\n    return next.handle(tokenizedReq);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-account',\r\n  templateUrl: './account.component.html',\r\n  styleUrls: ['./account.component.scss']\r\n})\r\nexport class AccountComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"p-0\">\r\n  <app-account-settings></app-account-settings>\r\n  <hr class=\"my-3\">\r\n  <app-parser-creation></app-parser-creation>\r\n</div>\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { User } from '../models/user';\r\nimport { Reply } from '../models/reply';\r\nimport { MessageService } from './message.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  userUrl = 'http://localhost:3000/api/users/';\r\n\r\n  constructor(private http: HttpClient, private ms: MessageService, private router: Router) { }\r\n\r\n  // Register user\r\n  registerUser(user: User): void {\r\n    this.http.post<Reply>(this.userUrl + 'register', user).subscribe(reply => {\r\n      console.log(reply);\r\n      if (!reply.success) {\r\n        this.ms.addDangerMessage(reply.message);\r\n      } else {\r\n        this.ms.addSuccessMessage(reply.message);\r\n        this.router.navigate(['/login']);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Login user\r\n  loginUser(user: User): void {\r\n    this.http.post<Reply>(this.userUrl + 'login', user).subscribe(reply => {\r\n      console.log(reply);\r\n      if (!reply.success) {\r\n        this.ms.addDangerMessage(reply.message);\r\n      } else {\r\n        this.ms.addSuccessMessage(reply.message);\r\n        const currUser: User = reply.result;\r\n        localStorage.setItem('thinkbudget-user', JSON.stringify(currUser));\r\n        localStorage.setItem('thinkbudget-token', reply.result2);\r\n        this.router.navigate(['/home']);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Logout user\r\n  logoutUser(): void {\r\n    console.log('Logging out user');\r\n    localStorage.removeItem('thinkbudget-token');\r\n    localStorage.removeItem('thinkbudget-user');\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  // Update user\r\n  updateUser(user: User): void {\r\n    this.http.post<Reply>(this.userUrl + 'update', user).subscribe(reply => {\r\n      if (!reply.success) {\r\n        this.ms.addDangerMessage(reply.message);\r\n      } else {\r\n        this.ms.addSuccessMessage(reply.message);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Parser } from '../../shared/models/parser';\r\nimport { User } from '../../shared/models/user';\r\nimport { AuthService } from '../../shared/services/auth.service';\r\nimport { ParserService } from '../../shared/services/parser.service';\r\n\r\n@Component({\r\n  selector: 'app-parser-creation',\r\n  templateUrl: './parser-creation.component.html',\r\n  styleUrls: ['./parser-creation.component.scss']\r\n})\r\nexport class ParserCreationComponent implements OnInit {\r\n\r\n  parserForm: FormGroup;\r\n  currUser: User;\r\n  parsers: Parser[] = [];\r\n\r\n  constructor(private fb: FormBuilder, private auth: AuthService, private ps: ParserService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currUser = this.auth.getUser();\r\n    this.ps.parsers$.subscribe(parser => {\r\n      this.parsers.push(parser);\r\n    });\r\n    this.ps.getParsers(this.currUser.email);\r\n    this.parserForm = this.fb.group({\r\n      bankAccountName: ['', Validators.required],\r\n      bankAccountType: ['debit', Validators.required],\r\n      hasHeader: ['false'],\r\n      dateCol: ['', Validators.required],\r\n      amountCol: ['', Validators.required],\r\n      payeeCol: ['', Validators.required],\r\n      typeCol: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  saveParser(): void {\r\n    const parser: Parser = {\r\n      email: this.currUser.email,\r\n      bankAccountName: this.parserForm.get('bankAccountName').value,\r\n      bankAccountType: this.parserForm.get('bankAccountType').value,\r\n      hasHeader: this.parserForm.get('hasHeader').value,\r\n      dateCol: this.parserForm.get('dateCol').value,\r\n      amountCol: this.parserForm.get('amountCol').value,\r\n      payeeCol: this.parserForm.get('payeeCol').value,\r\n      typeCol: this.parserForm.get('typeCol').value,\r\n    }\r\n    this.parsers = [];\r\n    this.ps.saveParser(parser);\r\n    this.parserForm.reset();\r\n  }\r\n\r\n  goToInformation(parser: Parser): void {\r\n    this.router.navigate(['/accountSettings/parserInformation', parser]);\r\n  }\r\n\r\n}\r\n","<h1 class=\"display-6\">Parser Settings</h1>\r\n<div class=\"card mb-3\">\r\n  <div class=\"card-header\">\r\n    Parser Creator\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <form [formGroup]=\"parserForm\" (ngSubmit)=\"saveParser()\">\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12 col-md-4\">\r\n          <div class=\"form-group\">\r\n            <label>Account Name</label>\r\n            <input type=\"text\" class=\"form-control\" formControlName=\"bankAccountName\">\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-12 col-md-4\">\r\n          <div class=\"form-group\">\r\n            <label>Date Column</label>\r\n            <input type=\"number\" class=\"form-control\" formControlName=\"dateCol\">\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-12 col-md-4\">\r\n          <div class=\"form-group\">\r\n            <label>Amount Column</label>\r\n            <input type=\"number\" class=\"form-control\" formControlName=\"amountCol\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12 col-md-4\">\r\n          <div class=\"form-group\">\r\n            <label>Payee Column</label>\r\n            <input type=\"number\" class=\"form-control\" formControlName=\"payeeCol\">\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-12 col-md-4\">\r\n          <div class=\"form-group\">\r\n            <label>Type Column</label>\r\n            <input type=\"number\" class=\"form-control\" formControlName=\"typeCol\">\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-12 col-md-2\">\r\n          <div class=\"form-group\">\r\n            <label>File Header</label>\r\n            <select class=\"form-select\" formControlName=\"hasHeader\">\r\n              <option value=\"true\">True</option>\r\n              <option value=\"false\">False</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-12 col-md-2\">\r\n          <div class=\"form-group\">\r\n            <label>Account Type</label>\r\n            <select class=\"form-select\" formControlName=\"bankAccountType\">\r\n              <option value=\"debit-card\">Debit Card</option>\r\n              <option value=\"credit-card\">Credit Card</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group mt-3\">\r\n        <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!parserForm.valid\">Save Parsing Profile</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n<p>Your current parsers:</p>\r\n<ul>\r\n  <li *ngFor=\"let parser of parsers\" class=\"py-1\"><button class=\"btn btn-success btn-sm\" (click)=\"goToInformation(parser)\">{{parser.bankAccountName}}</button></li>\r\n</ul>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { User } from '../../shared/models/user';\r\nimport { AuthService } from '../../shared/services/auth.service';\r\nimport { UserService } from '../../shared/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-account-settings',\r\n  templateUrl: './account-settings.component.html',\r\n  styleUrls: ['./account-settings.component.scss']\r\n})\r\nexport class AccountSettingsComponent implements OnInit {\r\n\r\n  currUser: User;\r\n  userSettings: FormGroup;\r\n\r\n  constructor(private auth: AuthService, private fb: FormBuilder, private us: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currUser = this.auth.getUser();\r\n    this.userSettings = this.fb.group({\r\n      username: [this.currUser.username],\r\n      email: [{ value: this.currUser.email, disabled: true }],\r\n      contactEmail: [this.currUser.contactEmail],\r\n      password: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  updateAccountSettings(): void {\r\n    const user: User = {\r\n      username: this.userSettings.get('username').value,\r\n      email: this.userSettings.get('email').value,\r\n      contactEmail: this.userSettings.get('contactEmail').value,\r\n      password: this.userSettings.get('password').value,\r\n    }\r\n    this.us.updateUser(user);\r\n    this.userSettings.reset();\r\n  }\r\n\r\n}\r\n","<h1 class=\"display-6\">Account Settings</h1>\r\n<form [formGroup]=\"userSettings\" (ngSubmit)=\"updateAccountSettings()\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-12 col-md-4\">\r\n      <div class=\"form-group\">\r\n        <label>Username</label>\r\n        <input type=\"text\" class=\"form-control\" placeholder=\"{{currUser.username}}\" formControlName=\"username\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Email</label>\r\n        <input type=\"text\" class=\"form-control text-muted\" placeholder=\"{{currUser.email}}\" formControlName=\"email\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Contact Email</label>\r\n        <input type=\"text\" class=\"form-control\" placeholder=\"{{currUser.contactEmail}}\" formControlName=\"contactEmail\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Password</label>\r\n        <input type=\"password\" class=\"form-control\" formControlName=\"password\">\r\n        <div class=\"form-text\">You must enter your password for any changes.</div>\r\n      </div>\r\n      <div class=\"form-group mt-3\">\r\n        <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!userSettings.valid\">Update Account Information</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-budget-settings',\r\n  templateUrl: './budget-settings.component.html',\r\n  styleUrls: ['./budget-settings.component.scss']\r\n})\r\nexport class BudgetSettingsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-category-creator></app-category-creator>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from 'src/app/app-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MessageComponent } from './message/message.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ MessageComponent ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n  ],\r\n  exports: [\r\n    ReactiveFormsModule,\r\n    AppRoutingModule,\r\n    MessageComponent,\r\n    NgbModule,\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { User } from '../../shared/models/user';\r\nimport { UserService } from '../../shared/services/user.service';\r\nimport { matchingValidator } from '../../shared/validators/matching.validator';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  registerForm: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder, private us: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.registerForm = this.fb.group({\r\n      username: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      contactEmail: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(8)]],\r\n      cpassword: ['', Validators.required],\r\n    }, { validators: matchingValidator });\r\n  }\r\n\r\n  submit(): void {\r\n    const user: User = {\r\n      username: this.registerForm.get('username').value,\r\n      email: this.registerForm.get('email').value,\r\n      contactEmail: this.registerForm.get('contactEmail').value,\r\n      password: this.registerForm.get('password').value,\r\n    }\r\n    this.us.registerUser(user);\r\n    this.registerForm.reset();\r\n  }\r\n\r\n  isFieldValid(fieldName: string): boolean {\r\n    return (this.registerForm.get(fieldName).touched || this.registerForm.get(fieldName).dirty) && this.registerForm.get(fieldName).valid;\r\n  }\r\n  isFieldInvalid(fieldName: string): boolean {\r\n    return (this.registerForm.get(fieldName).touched || this.registerForm.get(fieldName).dirty) && !this.registerForm.get(fieldName).valid;\r\n  }\r\n}\r\n","<div class=\"row justify-content-center mt-3\">\r\n  <div class=\"col-sm-12 col-md-6\">\r\n    <div class=\"card bg-light\">\r\n      <div class=\"card-header\">\r\n        <div class=\"row\">\r\n          <div class=\"col\">\r\n            <h3 class=\"align-middle\">think<span class=\"text-success\">Budget</span></h3>\r\n          </div>\r\n          <div class=\"col text-end\">\r\n            <a routerLink=\"/login\">Already have an account?</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <form [formGroup]=\"registerForm\" (ngSubmit)=\"submit()\">\r\n          <div class=\"form-group\">\r\n            <label class=\"text-success\">Username</label>\r\n            <input type=\"text\" class=\"form-control\" formControlName=\"username\" \r\n            [ngClass]=\"{ 'is-invalid': isFieldInvalid('username'), 'is-valid': isFieldValid('username') }\">\r\n            <span class=\"invalid-feedback\" *ngIf=\"isFieldInvalid('username')\">Required.</span>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label class=\"text-success\">Email</label>\r\n            <input type=\"text\" class=\"form-control\" formControlName=\"email\"\r\n            [ngClass]=\"{ 'is-invalid': isFieldInvalid('email'), 'is-valid': isFieldValid('email') }\">\r\n            <div class=\"form-text\">This email must be unique, used for logging in.</div>\r\n            <span class=\"invalid-feedback\" *ngIf=\"registerForm.get('email').errors?.required\">Required.</span>\r\n            <span class=\"invalid-feedback\" *ngIf=\"registerForm.get('email').errors?.email\">Must be a valid email.</span>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label class=\"text-success\">Contact Email</label>\r\n            <input type=\"text\" class=\"form-control\" formControlName=\"contactEmail\"\r\n            [ngClass]=\"{ 'is-invalid': isFieldInvalid('contactEmail'), 'is-valid': isFieldValid('contactEmail') }\">\r\n            <div class=\"form-text\">This email will be used for contact purposes only</div>\r\n            <span class=\"invalid-feedback\" *ngIf=\"registerForm.get('contactEmail').errors?.required\">Required.</span>\r\n            <span class=\"invalid-feedback\" *ngIf=\"registerForm.get('contactEmail').errors?.email\">Must be a valid email.</span>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label class=\"text-success\">Password</label>\r\n            <input type=\"password\" class=\"form-control\" formControlName=\"password\"\r\n            [ngClass]=\"{ 'is-invalid': isFieldInvalid('password'), 'is-valid': isFieldValid('password') }\">\r\n            <span class=\"invalid-feedback\" *ngIf=\"registerForm.get('password').errors?.required\">Required.</span>\r\n            <span class=\"invalid-feedback\" *ngIf=\"registerForm.get('password').errors?.minlength\">Must be at least 8 characters.</span>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label class=\"text-success\">Confirm Password</label>\r\n            <input type=\"password\" class=\"form-control\" formControlName=\"cpassword\"\r\n            [ngClass]=\"{ 'is-invalid': (registerForm.get('cpassword').touched || registerForm.get('cpassword').dirty) && registerForm.errors?.notMatching,\r\n            'is-valid': (registerForm.get('cpassword').touched || registerForm.get('cpassword').dirty) && !registerForm.errors?.notMatching }\">\r\n            <span class=\"invalid-feedback\" *ngIf=\"registerForm.get('cpassword').errors?.required\">Required.</span>\r\n            <span class=\"invalid-feedback\" *ngIf=\"registerForm.errors?.notMatching\">Passwords must match.</span>\r\n          </div>\r\n          <div class=\"form-group mt-3\">\r\n            <button class=\"btn btn-success\" type=\"submit\">Register</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private auth: AuthService, private router: Router) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    if (!this.auth.isAuthenticated()) {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n  \r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { User } from '../../shared/models/user';\r\nimport { UserService } from '../../shared/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder, private us: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = this.fb.group({\r\n      email: [''],\r\n      password: ['']\r\n    });\r\n  }\r\n\r\n  submit(): void {\r\n    const user: User = {\r\n      email: this.loginForm.get('email').value,\r\n      password: this.loginForm.get('password').value\r\n    }\r\n    this.us.loginUser(user);\r\n    this.loginForm.reset();\r\n  }\r\n\r\n}\r\n","<div class=\"row justify-content-center mt-3 p-0\">\r\n  <div class=\"col-sm-12 col-md-6\">\r\n    <div class=\"card bg-light\">\r\n      <div class=\"card-header\">\r\n        <div class=\"row\">\r\n          <div class=\"col\">\r\n            <h3 class=\"align-middle\">think<span class=\"text-success\">Budget</span></h3>\r\n          </div>\r\n          <div class=\"col text-end\">\r\n            <a routerLink=\"/register\">Don't have an account?</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"submit()\">\r\n          <div class=\"form-group\">\r\n            <label>Email</label>\r\n            <input type=\"text\" class=\"form-control\" formControlName=\"email\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Password</label>\r\n            <input type=\"password\" class=\"form-control\" formControlName=\"password\">\r\n          </div>\r\n          <div class=\"form-group mt-3\">\r\n            <button class=\"btn btn-success\" type=\"submit\">Login</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BudgetSettingsComponent } from './budget-settings.component';\r\nimport { CategoryCreatorComponent } from './category-creator/category-creator.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [BudgetSettingsComponent, CategoryCreatorComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class BudgetModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { Parser } from '../models/parser';\r\nimport { Reply } from '../models/reply';\r\nimport { MessageService } from './message.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ParserService {\r\n\r\n  parserUrl = \"http://localhost:3000/api/parser/\";\r\n  parserSubject: Subject<Parser> = new Subject<Parser>();\r\n  parsers$ = this.parserSubject.asObservable();\r\n\r\n  constructor(private http: HttpClient, private ms: MessageService) { }\r\n\r\n  // Save parser\r\n  saveParser(parser: Parser): void {\r\n    this.http.post<Reply>(this.parserUrl + 'save', parser).subscribe(reply => {\r\n      if (reply.success === 1) {\r\n        this.ms.addSuccessMessage(reply.message);\r\n      } else {\r\n        this.ms.addDangerMessage(reply.message);\r\n      }\r\n    });\r\n    this.getParsers(parser.email);\r\n  }\r\n\r\n  // Update Parser\r\n  updateParser(parser: Parser): void {\r\n    this.http.post<Reply>(this.parserUrl + 'update', parser).subscribe(reply => {\r\n      if (reply.success === 1) {\r\n        this.ms.addSuccessMessage(reply.message);\r\n      } else {\r\n        this.ms.addDangerMessage(reply.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Get parsers\r\n  getParsers(userEmail: string): void {\r\n    this.http.get<Reply>(this.parserUrl + 'get/' + userEmail).subscribe(reply => {\r\n      if (reply.success === 1) {\r\n        this.ms.addSuccessMessage(reply.message);\r\n        reply.result3.forEach(parser => {\r\n          this.parserSubject.next(parser);\r\n        });\r\n      } else if(reply.success === 2) {\r\n        this.ms.addWarningMessage(reply.message);\r\n      } else {\r\n        this.ms.addDangerMessage(reply.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Delete parser\r\n  deleteParser(parser: Parser): void {\r\n    this.http.post<Reply>(this.parserUrl + 'delete', parser).subscribe(reply => {\r\n      if (reply.success) {\r\n        this.ms.addSuccessMessage(reply.message);\r\n      } else {\r\n        this.ms.addDangerMessage(reply.message);\r\n      }\r\n    });\r\n  }\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { Message } from '../models/message';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MessageService {\r\n\r\n  messageSubject: Subject<Message> = new Subject<Message>();\r\n  messages$ = this.messageSubject.asObservable();\r\n\r\n  toasts: Message[] = [];\r\n\r\n  constructor() { }\r\n\r\n  addDangerMessage(content: string): void {\r\n    this.toasts.push({ header: 'Danger message', content: content });\r\n  }\r\n\r\n  addWarningMessage(content: string): void {\r\n    this.toasts.push({ header: 'Warning message', content: content });\r\n    console.log(this.toasts);\r\n  }\r\n\r\n  addSuccessMessage(content: string): void {\r\n    this.toasts.push({ header: 'Success message', content: content });\r\n  }\r\n\r\n  addInfoMessage(content: string): void {\r\n    this.toasts.push({ header: 'Info message', content: content });\r\n  }\r\n\r\n  remove(toast: Message): void {\r\n    this.toasts = this.toasts.filter(t => t != toast);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'TBTransactionManager-Client';\r\n}\r\n","<app-navbar></app-navbar>\r\n<div class=\"row mt-3\">\r\n  <div class=\"col-sm-12 col-md-2\">\r\n    <app-message></app-message>\r\n  </div>\r\n  <div class=\"col-sm-12 col-md-8\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Parser } from '../../shared/models/parser';\r\nimport { Transaction } from '../../shared/models/transaction';\r\nimport { User } from '../../shared/models/user';\r\nimport { ParserService } from '../../shared/services/parser.service';\r\nimport { TransactionService } from '../../shared/services/transaction.service';\r\n\r\n@Component({\r\n  selector: 'app-modal-add-transaction',\r\n  templateUrl: './modal-add-transaction.component.html',\r\n  styleUrls: ['./modal-add-transaction.component.scss']\r\n})\r\nexport class ModalAddTransactionComponent implements OnInit {\r\n\r\n  @Input() currUser: User;\r\n  @Input() parsers: Parser[];\r\n  transForm: FormGroup;\r\n\r\n  constructor(private ps: ParserService, private ts: TransactionService, private fb: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.transForm = this.fb.group({\r\n      bankAccountName: ['', Validators.required],\r\n      transAmount: ['', Validators.required],\r\n      transDate: ['', Validators.required],\r\n      transPayee: ['', Validators.required],\r\n      transCategory: ['Uncategorized', Validators.required],\r\n      transNote: [''],\r\n    });\r\n  }\r\n\r\n  addTransaction(): void {\r\n    const transaction: Transaction = {\r\n      userEmail: this.currUser.email,\r\n      bankAccountName: this.parsers[this.transForm.get('bankAccountName').value].bankAccountName,\r\n      bankAccountType: this.parsers[this.transForm.get('bankAccountName').value].bankAccountType,\r\n      transAmount: this.transForm.get('transAmount').value,\r\n      transDate: this.transForm.get('transDate').value,\r\n      transPayee: this.transForm.get('transPayee').value,\r\n      transType: 'Custom Transaction',\r\n      transCategory: this.transForm.get('transCategory').value,\r\n    }\r\n    this.ts.saveCustomTransactions([transaction]);\r\n  }\r\n\r\n}\r\n","<div class=\"container my-3\">\r\n  <form [formGroup]=\"transForm\" (ngSubmit)=\"addTransaction()\">\r\n    <div class=\"row\">\r\n      <div class=\"col-sm-12 col-md-4\">\r\n        <div class=\"form-group\">\r\n          <label>Account Name</label>\r\n          <select class=\"form-select\" formControlName=\"bankAccountName\">\r\n            <option *ngFor=\"let parser of parsers; let i = index\" [value]='i'>{{parser.bankAccountName}}</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-12 col-md-4\">\r\n        <div class=\"form-group\">\r\n          <label>Amount</label>\r\n          <input type=\"number\" class=\"form-control\" formControlName=\"transAmount\">\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-12 col-md-4\">\r\n        <div class=\"form-group\">\r\n          <label>Date</label>\r\n          <input type=\"date\" class=\"form-control\" formControlName=\"transDate\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-sm-12 col-md-4\">\r\n        <div class=\"form-group\">\r\n          <label>Payee</label>\r\n          <input type=\"text\" class=\"form-control\" formControlName=\"transPayee\">\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-12 col-md-4\">\r\n        <div class=\"form-group\">\r\n          <label>Category</label>\r\n          <select class=\"form-select\" formControlName=\"transCategory\">\r\n            <option value=\"Uncategorized\">Uncategorized</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-12 col-md-4\">\r\n        <div class=\"form-group\">\r\n          <label>Note</label>\r\n          <input type=\"text\" class=\"form-control\" formControlName=\"transNote\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <button class=\"btn btn-success col mx-3 mt-3\" type=\"submit\" [disabled]=\"!transForm.valid\">Add transaction</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { createThis } from 'typescript';\r\nimport { Budget } from '../../shared/models/budget';\r\nimport { Parser } from '../../shared/models/parser';\r\nimport { Transaction } from '../../shared/models/transaction';\r\nimport { User } from '../../shared/models/user';\r\nimport { AuthService } from '../../shared/services/auth.service';\r\nimport { BudgetService } from '../../shared/services/budget.service';\r\nimport { ParserService } from '../../shared/services/parser.service';\r\nimport { TransactionService } from '../../shared/services/transaction.service';\r\nimport { TransactionModalComponent } from '../transaction-modal/transaction-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-transaction-list',\r\n  templateUrl: './transaction-list.component.html',\r\n  styleUrls: ['./transaction-list.component.scss']\r\n})\r\nexport class TransactionListComponent implements OnInit {\r\n\r\n  currDate: Date;\r\n  currUser: User;\r\n  budgets: Budget[] = [];\r\n  parsers: Parser[] = [];\r\n  transactionList: Transaction[] = [];\r\n  title = 'All';\r\n\r\n  searchForm: FormGroup;\r\n  categories = [ ];\r\n  payees = [];\r\n  dates = [];\r\n\r\n  constructor(private ts: TransactionService,\r\n    private auth: AuthService,\r\n    private modalService: NgbModal,\r\n    private bs: BudgetService,\r\n    private ps: ParserService,\r\n    private fb: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currUser = this.auth.getUser();\r\n    this.bs.budgets$.subscribe(budget => {\r\n      this.budgets.push(budget);\r\n    });\r\n    this.ps.parsers$.subscribe(parser => {\r\n      this.parsers.push(parser);\r\n    });\r\n    this.ts.transactions$.subscribe(transaction => {\r\n      this.transactionList.push(transaction);\r\n      if (!this.categories.includes(transaction.transCategory)){\r\n        this.categories.push(transaction.transCategory);\r\n        this.categories.sort();\r\n      }\r\n      if (!this.payees.includes(transaction.transPayee)){\r\n        this.payees.push(transaction.transPayee);\r\n        this.payees.sort();\r\n      }\r\n    });\r\n    this.searchForm = this.fb.group({\r\n      accountType: ['.*'],\r\n      transPayee: ['.*'],\r\n      transCategory: ['.*'],\r\n      numberOfResults: [100],\r\n    });\r\n    this.currDate = new Date();\r\n    console.log(this.currDate.toISOString().slice(0,7));\r\n    this.search();\r\n    this.bs.getBudget(this.currUser.email);\r\n  }\r\n\r\n  showTransactionModal(trans: Transaction): void {\r\n    const modalRef = this.modalService.open(TransactionModalComponent, { centered: true, size: 'lg' });\r\n    modalRef.componentInstance.trans = trans;\r\n    modalRef.componentInstance.budgets = this.budgets;\r\n    modalRef.componentInstance.parsers = this.parsers;\r\n  }\r\n\r\n  updateCategories(): void {\r\n    this.transactionList = [];\r\n    this.ts.updateCategories(this.currUser.email);\r\n  }\r\n\r\n  search(): void {\r\n    this.transactionList = [];\r\n    this.ts.getTransactions(this.currUser.email,\r\n      this.searchForm.get('accountType').value,\r\n      this.searchForm.get('transPayee').value,\r\n      this.searchForm.get('transCategory').value,\r\n      this.searchForm.get('numberOfResults').value);\r\n  }\r\n\r\n}\r\n","<h1 class=\"display-6\">Transaction List</h1>\r\n<div class=\"card\">\r\n  <div class=\"card-header\">\r\n    <div class=\"row\">\r\n      <div class=\"col-sm-10\">\r\n        <h3>Transactions</h3>\r\n      </div>\r\n      <div class=\"col-md-2\">\r\n        <button type=\"button\" class=\"btn btn-success\" (click)=\"updateCategories()\">Update Categories</button>\r\n      </div>\r\n    </div>\r\n    <form [formGroup]=\"searchForm\" (ngSubmit)=\"search()\">\r\n      <div class=\"row\">\r\n        <div class=\"col-2\">\r\n          <label>Account</label>\r\n          <select class=\"form-select\" formControlName=\"accountType\">\r\n            <option value=\".*\">All</option>\r\n            <option value=\"debit-card\">Debit</option>\r\n            <option value=\"credit-card\">Credit</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"col\">\r\n          <label>Time Range</label>\r\n          <div class=\"row\">\r\n            <div class=\"col-6\">\r\n              <select class=\"form-select\">\r\n                <option value=\"*\">All</option>\r\n                <option value=\"1\">Jan</option>\r\n                <option value=\"2\">Feb</option>\r\n                <option value=\"3\">Mar</option>\r\n                <option value=\"4\">Apr</option>\r\n                <option value=\"5\">May</option>\r\n                <option value=\"6\">June</option>\r\n                <option value=\"7\">July</option>\r\n                <option value=\"8\">Aug</option>\r\n                <option value=\"9\">Sept</option>\r\n                <option value=\"10\">Oct</option>\r\n                <option value=\"11\">Nov</option>\r\n                <option value=\"12\">Dec</option>\r\n              </select>\r\n            </div>\r\n            <div class=\"col\">\r\n              <select class=\"form-select\">\r\n                <option value=\"*\">All</option>\r\n                <option value=\"2021\">2021</option>\r\n                <option value=\"2020\">2020</option>\r\n                <option value=\"2019\">2019</option>\r\n                <option value=\"2018\">2018</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col\">\r\n          <label>Payee</label>\r\n          <select class=\"form-select\" formControlName=\"transPayee\">\r\n            <option value=\".*\">Any</option>\r\n            <option *ngFor=\"let payee of payees\">{{payee}}</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"col\">\r\n          <label>Category</label>\r\n          <select class=\"form-select\" formControlName=\"transCategory\">\r\n            <option value=\".*\">Any</option>\r\n            <option *ngFor=\"let category of categories\">{{category}}</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"col\">\r\n          <label>Rows (set 0 for all)</label>\r\n          <input type=\"number\" class=\"form-control\" min=\"0\" formControlName=\"numberOfResults\">\r\n        </div>\r\n        <div class=\"col-1\">\r\n          <button type=\"submit\" class=\"btn btn-success mt-4\">Search</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div *ngIf=\"transactionList.length === 0;else loaded\">\r\n    <div class=\"spinner-border m-5\" role=\"status\"></div>\r\n  </div>\r\n  <ng-template #loaded>\r\n    <table class=\"table table-hover table-striped\">\r\n      <thead>\r\n        <tr>\r\n          <th>Account</th>\r\n          <th>Amount</th>\r\n          <th>Date</th>\r\n          <th>Payee</th>\r\n          <th>Category</th>\r\n          <th>Note</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let transaction of transactionList\" (click)=\"showTransactionModal(transaction)\">\r\n          <td>{{transaction.bankAccountName}}</td>\r\n          <td *ngIf=\"transaction.transAmount < 0; else black\" class=\"text-danger\">{{transaction.transAmount}}</td>\r\n          <ng-template #black><td>{{transaction.transAmount}}</td></ng-template>\r\n          <td>{{transaction.transDate | date: short}}</td>\r\n          <td>{{transaction.transPayee | uppercase}}</td>\r\n          <td>{{transaction.transCategory}}</td>\r\n          <td>\r\n            <svg *ngIf=\"transaction.transNote\" class=\"bi\" width=\"32\" height=\"32\" fill=\"currentColor\">\r\n              <use xlink:href=\"/assets/bootstrap-icons.svg#card-text\"/>\r\n            </svg>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </ng-template>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { SharedModule } from './modules/shared/shared.module'\r\nimport { AccountModule } from './modules/account/account.module';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { TokenInterceptorService } from './modules/shared/services/token-interceptor.service';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { TransactionModule } from './modules/transaction/transaction.module';\r\nimport { BudgetModule } from './modules/budget/budget.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    HomeComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    SharedModule,\r\n    AccountModule,\r\n    TransactionModule,\r\n    BudgetModule,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptorService,\r\n      multi: true\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { User } from '../models/user';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private jwtHelper: JwtHelperService = new JwtHelperService();\r\n\r\n  constructor() { }\r\n\r\n  loggedIn(): boolean {\r\n    return !!localStorage.getItem('thinkbudget-token');\r\n  }\r\n\r\n  getToken(): string {\r\n    return localStorage.getItem('thinkbudget-token');\r\n  }\r\n\r\n  getUser(): User {\r\n    return JSON.parse(localStorage.getItem('thinkbudget-user'));\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    const token = this.getToken();\r\n    return !this.jwtHelper.isTokenExpired(token);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MessageService } from '../services/message.service';\r\n\r\n@Component({\r\n  selector: 'app-message',\r\n  templateUrl: './message.component.html',\r\n  styleUrls: ['./message.component.scss']\r\n})\r\nexport class MessageComponent implements OnInit {\r\n  \r\n  constructor(public ms: MessageService) { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  msgColour(header: string): string {\r\n    if (header === 'Danger message') {\r\n      return '#f5897d';\r\n    } else if (header === 'Success message') {\r\n      return '#cef2b3';\r\n    } else if (header === 'Warning message') {\r\n      return '#faf09b';\r\n    } else {\r\n      return '#acbdfa';\r\n    }\r\n  }\r\n  \r\n}\r\n","<ngb-toast *ngFor=\"let toast of ms.toasts\" [autohide]=\"true\" [delay]=\"5000\" (hide)=\"ms.remove(toast)\" [ngStyle]=\"{ 'background-color': msgColour(toast.header) }\">\r\n  {{toast.content}}\r\n</ngb-toast>\r\n","import { FormGroup, ValidationErrors, ValidatorFn } from '@angular/forms';\r\n\r\nexport const matchingValidator: ValidatorFn = (control: FormGroup): ValidationErrors | null => {\r\n    const password = control.get('password').value;\r\n    const cpassword = control.get('cpassword').value;\r\n\r\n    return cpassword !== password ? { notMatching: true } : null;\r\n};\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-transaction',\r\n  templateUrl: './transaction.component.html',\r\n  styleUrls: ['./transaction.component.scss']\r\n})\r\nexport class TransactionComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-transaction-importer></app-transaction-importer>\r\n<hr class=\"my-3\">\r\n<app-transaction-list></app-transaction-list>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../modules/shared/services/auth.service';\r\nimport { UserService } from '../modules/shared/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor(public auth: AuthService, public user: UserService) { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  click() {\r\n    console.log('Clicked');\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar sticky-top navbar-expand-lg navbar-dark bg-dark\">\r\n  <div class=\"container-fluid\">\r\n    <a class=\"navbar-brand\" href=\"#\">think<span class=\"text-success\">Budget</span></a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n      <ul class=\"navbar-nav\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" aria-current=\"page\" routerLink=\"/home\">Home</a>\r\n        </li>\r\n        <li class=\"nav-item\" *ngIf=\"!auth.loggedIn()\">\r\n          <a class=\"nav-link\" routerLink=\"/login\">Login</a>\r\n        </li>\r\n        <li class=\"nav-item dropdown\" *ngIf=\"auth.loggedIn()\">\r\n          <a class=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            Account\r\n          </a>\r\n          <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <li><a class=\"dropdown-item\" routerLink=\"/accountSettings\">Account Settings</a></li>\r\n            <li><a class=\"dropdown-item\" routerLink=\"/budgetSettings\">Budget Settings</a></li>\r\n            <li><a class=\"dropdown-item\" routerLink=\"/transactionManagement\">Transactions</a></li>\r\n            <li><hr class=\"dropdown-divider\"></li>\r\n            <li><a class=\"dropdown-item btn\" (click)=\"user.logoutUser()\">Logout</a></li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav>  \r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Parser } from '../../shared/models/parser';\r\nimport { ParserService } from '../../shared/services/parser.service';\r\n\r\n@Component({\r\n  selector: 'app-parser-information',\r\n  templateUrl: './parser-information.component.html',\r\n  styleUrls: ['./parser-information.component.scss']\r\n})\r\nexport class ParserInformationComponent implements OnInit {\r\n\r\n  parser: Parser;\r\n  parserForm: FormGroup;\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router, private ps: ParserService, private fb: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(params => {\r\n      this.parser = {\r\n        email: params['email'],\r\n        bankAccountName: params['bankAccountName'],\r\n        bankAccountType: params['bankAccountType'],\r\n        hasHeader: params['hasHeader'],\r\n        dateCol: params['dateCol'],\r\n        amountCol: params['amountCol'],\r\n        payeeCol: params['payeeCol'],\r\n        typeCol: params['typeCol']\r\n      }\r\n    });\r\n    this.parserForm = this.fb.group({\r\n      email: [this.parser.email],\r\n      hasHeader: [this.parser.hasHeader],\r\n      bankAccountName: [{ value: this.parser.bankAccountName, disabled: true }],\r\n      bankAccountType: [this.parser.bankAccountType],\r\n      dateCol: [this.parser.dateCol],\r\n      amountCol: [this.parser.amountCol],\r\n      payeeCol: [this.parser.payeeCol],\r\n      typeCol: [this.parser.typeCol]\r\n    });\r\n  }\r\n\r\n  updateParser(): void {\r\n    const parser: Parser = {\r\n      email: this.parser.email,\r\n      bankAccountName: this.parserForm.get('bankAccountName').value,\r\n      bankAccountType: this.parserForm.get('bankAccountType').value,\r\n      hasHeader: this.parserForm.get('hasHeader').value,\r\n      dateCol: this.parserForm.get('dateCol').value,\r\n      amountCol: this.parserForm.get('amountCol').value,\r\n      payeeCol: this.parserForm.get('payeeCol').value,\r\n      typeCol: this.parserForm.get('typeCol').value,\r\n    };\r\n    console.log(parser);\r\n    this.ps.updateParser(parser);\r\n    this.router.navigate(['/accountSettings']);\r\n  }\r\n\r\n  deleteParser(): void {\r\n    this.ps.deleteParser(this.parser);\r\n    this.router.navigate(['/accountSettings']);\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-sm-12 col-md-10\">\r\n    <h1 class=\"display-6\">Parser: {{parser.bankAccountName}}</h1>\r\n  </div>\r\n  <div class=\"col-sm-12 col-md-2 text-end\">\r\n    <p class=\"text-primary btn\" (click)=\"deleteParser()\">Delete parser</p>\r\n  </div>\r\n</div>\r\n<form [formGroup]=\"parserForm\" (ngSubmit)=\"updateParser()\">\r\n  <div class=\"row\">\r\n    <div class=\"form-group col-sm-12 col-md-3\">\r\n      <label>Does file have a header?</label>\r\n      <select class=\"form-select\" formControlName=\"hasHeader\">\r\n        <option value=\"true\">true</option>\r\n        <option value=\"false\">false</option>\r\n      </select>\r\n    </div>\r\n    <div class=\"form-group col-sm-12 col-md-3\">\r\n      <label>Account Type</label>\r\n      <select class=\"form-select\" formControlName=\"bankAccountType\">\r\n        <option value=\"debit-card\">Debit Card</option>\r\n        <option value=\"credit-card\">Credit Card</option>\r\n      </select>\r\n    </div>\r\n    <div class=\"form-group col-sm-12 col-md-6\">\r\n      <label>Account Name</label>\r\n      <input type=\"text\" class=\"form-control\" formControlName=\"bankAccountName\">\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"form-group col-sm-12 col-md-6\">\r\n      <label>Date Column</label>\r\n      <input type=\"number\" class=\"form-control\" formControlName=\"dateCol\">\r\n    </div>\r\n    <div class=\"form-group col-sm-12 col-md-6\">\r\n      <label>Amount Column</label>\r\n      <input type=\"number\" class=\"form-control\" formControlName=\"amountCol\">\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"form-group col-sm-12 col-md-6\">\r\n      <label>Payee Column</label>\r\n      <input type=\"number\" class=\"form-control\" formControlName=\"payeeCol\">\r\n    </div>\r\n    <div class=\"form-group col-sm-12 col-md-6\">\r\n      <label>Type Column</label>\r\n      <input type=\"number\" class=\"form-control\" formControlName=\"typeCol\">\r\n    </div>\r\n  </div>\r\n  <div class=\"row mt-3\">\r\n    <div class=\"form-group col-sm-12 col-md-6\">\r\n      <button type=\"submit\" class=\"btn btn-success\">Update Parser</button>\r\n    </div>\r\n  </div>\r\n</form>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { AccountSettingsComponent } from './account-settings/account-settings.component';\r\nimport { ParserCreationComponent } from './parser-creation/parser-creation.component';\r\nimport { AccountComponent } from './account.component';\r\nimport { ParserInformationComponent } from './parser-information/parser-information.component';\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, RegisterComponent, AccountSettingsComponent, ParserCreationComponent, AccountComponent, ParserInformationComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class AccountModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { Reply } from '../models/reply';\r\nimport { Transaction } from '../models/transaction';\r\nimport { MessageService } from './message.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TransactionService {\r\n\r\n  transUrl = 'http://localhost:3000/api/transaction/';\r\n  transactionSubjet: Subject<Transaction> = new Subject<Transaction>();\r\n  transactions$ = this.transactionSubjet.asObservable();\r\n  recentlyAddedSubjet: Subject<Transaction> = new Subject<Transaction>();\r\n  recentlyAdded$ = this.transactionSubjet.asObservable();\r\n\r\n  constructor(private http: HttpClient, private ms: MessageService) { }\r\n\r\n  saveTransactions(transactions: Transaction[]): void {\r\n    this.http.post<Reply>(this.transUrl + 'save', transactions).subscribe(reply => {\r\n      if (reply.success === 1) {\r\n        this.ms.addSuccessMessage(reply.message);\r\n        reply.result3.forEach(transaction => {\r\n          this.recentlyAddedSubjet.next(transaction);\r\n        });\r\n      } else {\r\n        this.ms.addDangerMessage(reply.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  saveCustomTransactions(transactions: Transaction[]): void {\r\n    this.http.post<Reply>(this.transUrl + 'saveCustom', transactions).subscribe(reply => {\r\n      if (reply.success === 1) {\r\n        this.ms.addSuccessMessage(reply.message);\r\n        reply.result3.forEach(transaction => {\r\n          this.recentlyAddedSubjet.next(transaction);\r\n        });\r\n      } else {\r\n        this.ms.addDangerMessage(reply.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  getTransactions(userEmail: string, accountType: string, transPayee: string, transCategory: string, numberOfResults: number): void {\r\n    this.http.get<Reply>(this.transUrl + 'get/' + userEmail + '&' + accountType + '&' + transPayee + '&' + transCategory + '&' + numberOfResults).subscribe(reply => {\r\n      if (reply.success === 1) {\r\n        this.ms.addSuccessMessage(reply.message);\r\n        reply.result3.forEach(transaction => {\r\n          this.transactionSubjet.next(transaction);\r\n        });\r\n      } else if (reply.success === 2) {\r\n        this.ms.addWarningMessage(reply.message);\r\n      } else {\r\n        this.ms.addDangerMessage(reply.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  updateTransaction(trans: Transaction): void {\r\n    this.http.post<Reply>(this.transUrl + 'update', trans).subscribe(reply => {\r\n      if (reply.success === 1) {\r\n        this.ms.addSuccessMessage(reply.message);\r\n      } else {\r\n        this.ms.addDangerMessage(reply.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  updateCategories(userEmail: string): void {\r\n    this.http.get<Reply>(this.transUrl + 'updateCategories/' + userEmail).subscribe(reply => {\r\n      if (reply.success === 1) {\r\n        this.ms.addSuccessMessage(reply.message);\r\n      } else if (reply.success === 2) {\r\n        this.ms.addWarningMessage(reply.message);\r\n      } else {\r\n        this.ms.addDangerMessage(reply.message);\r\n      }\r\n      this.getTransactions(userEmail, '.*', '.*', '.*', 0);\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { Budget } from '../models/budget';\r\nimport { Reply } from '../models/reply';\r\nimport { MessageService } from './message.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BudgetService {\r\n\r\n  budgetUrl = 'http://localhost:3000/api/budget/';\r\n  budgetSubject: Subject<Budget> = new Subject<Budget>();\r\n  budgets$ = this.budgetSubject.asObservable();\r\n\r\n  constructor(private http: HttpClient, private ms: MessageService) { }\r\n\r\n  saveBudget(budget: Budget): void {\r\n    this.http.post<Reply>(this.budgetUrl + 'save', budget).subscribe(reply => {\r\n      if (reply.success === 1){\r\n        this.ms.addSuccessMessage(reply.message);\r\n        this.getBudget(budget.userEmail);\r\n      } else if (reply.success === 0) {\r\n        this.ms.addDangerMessage(reply.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  getBudget(userEmail: string): void {\r\n    this.http.get<Reply>(this.budgetUrl + 'get/' + userEmail).subscribe(reply => {\r\n      if (reply.success === 1) {\r\n        this.ms.addSuccessMessage(reply.message);\r\n        reply.result3.forEach(budget => {\r\n          this.budgetSubject.next(budget);\r\n        });\r\n      } else if (reply.success === 2) {\r\n        this.ms.addWarningMessage(reply.message);\r\n      } else {\r\n        this.ms.addDangerMessage(reply.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteBudget(budget: Budget): void {\r\n    this.http.post<Reply>(this.budgetUrl + 'delete', budget).subscribe(reply => {\r\n      if (reply.success === 1) {\r\n        this.ms.addSuccessMessage(reply.message);\r\n      } else {\r\n        this.ms.addDangerMessage(reply.message);\r\n      }\r\n      this.getBudget(budget.userEmail);\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxCsvParser } from 'ngx-csv-parser';\r\nimport { Parser } from '../../shared/models/parser';\r\nimport { Transaction } from '../../shared/models/transaction';\r\nimport { User } from '../../shared/models/user';\r\nimport { AuthService } from '../../shared/services/auth.service';\r\nimport { ParserService } from '../../shared/services/parser.service';\r\nimport { TransactionService } from '../../shared/services/transaction.service';\r\nimport { ModalAddTransactionComponent } from '../modal-add-transaction/modal-add-transaction.component';\r\n\r\n@Component({\r\n  selector: 'app-transaction-importer',\r\n  templateUrl: './transaction-importer.component.html',\r\n  styleUrls: ['./transaction-importer.component.scss']\r\n})\r\nexport class TransactionImporterComponent implements OnInit {\r\n\r\n  importForm: FormGroup;\r\n  currUser: User;\r\n  parsers: Parser[] = [];\r\n  addedTransactions: Transaction[] = [];\r\n\r\n  constructor(private ps: ParserService,\r\n    private ts: TransactionService,\r\n    private auth: AuthService,\r\n    private fb: FormBuilder,\r\n    private ngxParser: NgxCsvParser,\r\n    private modalService: NgbModal) { }\r\n\r\n  ngOnInit(): void {\r\n    this.importForm = this.fb.group({\r\n      parser: ['', Validators.required],\r\n      file: [''],\r\n    });\r\n    this.currUser = this.auth.getUser();\r\n    this.ps.parsers$.subscribe(parser => {\r\n      this.parsers.push(parser);\r\n    });\r\n    this.ps.getParsers(this.currUser.email);\r\n    this.ts.transactions$.subscribe(transaction => {\r\n      this.addedTransactions.push(transaction);\r\n    });\r\n  }\r\n\r\n  importTransactions(files: FileList): void {\r\n    const fileToParse: File = files.item(0);\r\n    const selectedProfile = this.parsers[this.importForm.get('parser').value];\r\n    const transactions: Transaction[] = [];\r\n\r\n    this.ngxParser.parse(fileToParse, { header: false, delimiter: ',' })\r\n    .pipe().subscribe((result: Array<any>) => {\r\n      // If there is a header, remove first entry\r\n      if (selectedProfile.hasHeader){\r\n        result.shift();\r\n      }\r\n      result.forEach(transaction => {\r\n        transactions.push({\r\n          userEmail: this.currUser.email,\r\n          bankAccountName: selectedProfile.bankAccountName,\r\n          bankAccountType: selectedProfile.bankAccountType,\r\n          transDate: new Date(transaction[selectedProfile.dateCol]),\r\n          transAmount: transaction[selectedProfile.amountCol],\r\n          transPayee: transaction[selectedProfile.payeeCol] || '???',\r\n          transType: transaction[selectedProfile.typeCol],\r\n          transCategory: 'Uncategorized'\r\n        });\r\n      });\r\n      this.ts.saveTransactions(transactions);\r\n    });\r\n    this.importForm.get('file').reset();\r\n  }\r\n\r\n  openTransactionModal(): void {\r\n    const modalRef = this.modalService.open(ModalAddTransactionComponent, { centered: true, size: 'lg' });\r\n    modalRef.componentInstance.currUser = this.currUser;\r\n    modalRef.componentInstance.parsers = this.parsers;\r\n  }\r\n}\r\n","<h1 class=\"display-6\">Importer</h1>\r\n<form [formGroup]=\"importForm\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-12 col-md-6\">\r\n      <div class=\"form-group\">\r\n        <label>Parser</label>\r\n        <select class=\"form-select\" formControlName=\"parser\">\r\n          <option value=\"\">Choose a parser</option>\r\n          <option *ngFor=\"let parser of parsers; let i = index\" [value]=\"i\">{{parser.bankAccountName}}</option>\r\n        </select>\r\n        <div class=\"form-text\">Select a parser and then a csv file...</div>\r\n      </div>\r\n      <div class=\"form-group\" *ngIf=\"!(importForm.get('parser').value === '')\">\r\n        <label>CSV File</label>\r\n        <input type=\"file\" class=\"form-control\" formControlName=\"file\" accept=\".csv\" (change)=\"importTransactions($event.target.files)\"> \r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-12 col-md-6\">\r\n      <button type=\"button\" class=\"btn btn-success mt-4\" (click)=\"openTransactionModal()\">Add a custom transaction</button>\r\n    </div>\r\n  </div>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Budget } from '../../shared/models/budget';\r\nimport { AuthService } from '../../shared/services/auth.service';\r\nimport { BudgetService } from '../../shared/services/budget.service';\r\n\r\n@Component({\r\n  selector: 'app-category-creator',\r\n  templateUrl: './category-creator.component.html',\r\n  styleUrls: ['./category-creator.component.scss']\r\n})\r\nexport class CategoryCreatorComponent implements OnInit {\r\n\r\n  categoryNames = [\r\n    \"Groceries\",\r\n    \"Rent\",\r\n    \"Entertainment\",\r\n    \"Clothes\",\r\n    \"Dates\",\r\n  ]\r\n\r\n  categoryNameForm: FormGroup;\r\n  budgetForm: FormGroup;\r\n  budgets: Budget[] = [];\r\n\r\n  constructor(private auth: AuthService, private fb: FormBuilder, private bs: BudgetService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.bs.budgets$.subscribe(budget => {\r\n      this.budgets.push(budget);\r\n      if (!this.categoryNames.includes(budget.categoryName)) {\r\n        this.categoryNames.push(budget.categoryName);\r\n        this.categoryNames.sort();\r\n      }\r\n    });\r\n    this.bs.getBudget(this.auth.getUser().email);\r\n    this.categoryNameForm = this.fb.group({\r\n      categoryName: ['']\r\n    });\r\n    this.budgetForm = this.fb.group({\r\n      categoryName: ['', Validators.required],\r\n      budgetAmount: [0, Validators.required],\r\n      budgetColour: ['#333333', Validators.required],\r\n    });\r\n    this.categoryNames.sort();\r\n  }\r\n\r\n  addCategoryName(): void {\r\n    this.categoryNames.push(this.categoryNameForm.get('categoryName').value);\r\n    this.categoryNames.sort();\r\n    this.categoryNameForm.reset();\r\n  }\r\n\r\n  addToBudget(): void {\r\n    console.log(this.budgetForm.value);\r\n    const budget: Budget = {\r\n      userEmail: this.auth.getUser().email,\r\n      categoryName: this.budgetForm.get('categoryName').value,\r\n      budgetAmount: this.budgetForm.get('budgetAmount').value,\r\n      budgetColour: this.budgetForm.get('budgetColour').value,\r\n    }\r\n    this.budgets = [];\r\n    this.bs.saveBudget(budget);\r\n  }\r\n\r\n  deleteFromBudget(budget: Budget): void {\r\n    this.budgets = [];\r\n    this.bs.deleteBudget(budget);\r\n  }\r\n\r\n}\r\n","<h1 class=\"display-6\">Category Creator</h1>\r\n<form [formGroup]=\"categoryNameForm\" (ngSubmit)=\"addCategoryName()\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-12 col-md-4\">\r\n      <label>Add a category name</label>\r\n      <input type=\"text\" class=\"form-control\" placeholder=\"Groceries...\" formControlName=\"categoryName\">\r\n    </div>\r\n    <div class=\"col-sm-12 col-md-4\">\r\n      <button type=\"submit\" class=\"btn btn-success mt-4\">Add Category</button>\r\n    </div>\r\n  </div>\r\n</form>\r\n<div class=\"card mt-3\">\r\n  <div class=\"card-header\">\r\n    <form [formGroup]=\"budgetForm\" (ngSubmit)=\"addToBudget()\">\r\n      <div class=\"d-inline-flex\">\r\n        <div class=\"form-group\">\r\n          <label>Category Name</label>\r\n          <select class=\"form-select\" formControlName=\"categoryName\">\r\n            <option *ngFor=\"let category of categoryNames\">{{category}}</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"form-group mx-3\">\r\n          <label>Category Amount</label>\r\n          <input type=\"number\" class=\"form-control\" formControlName=\"budgetAmount\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label>Colour</label>\r\n          <input type=\"color\" class=\"form-control form-control-color\" formControlName=\"budgetColour\">\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-success mt-4 mx-3\">Add to Budget</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <div class=\"form-text\">\r\n      Double click an entry to remove from the budget\r\n    </div>\r\n    <table class=\"table table-hover\">\r\n      <thead>\r\n        <tr>\r\n          <th>Category Name</th>\r\n          <th>Budgeted Amount</th>\r\n          <th>Category Colour</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let budget of budgets\" (dblclick)=\"deleteFromBudget(budget)\">\r\n          <td>{{budget.categoryName}}</td>\r\n          <td>{{budget.budgetAmount | currency}}</td>\r\n          <td [style.background]=\"budget.budgetColour\" style=\"width: 200px;\"></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AccountComponent } from './modules/account/account.component';\r\nimport { LoginComponent } from './modules/account/login/login.component';\r\nimport { ParserInformationComponent } from './modules/account/parser-information/parser-information.component';\r\nimport { RegisterComponent } from './modules/account/register/register.component';\r\nimport { BudgetSettingsComponent } from './modules/budget/budget-settings.component';\r\nimport { AuthGuard } from './modules/shared/guards/auth.guard';\r\nimport { TransactionComponent } from './modules/transaction/transaction.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'home', component: HomeComponent, canActivate: [AuthGuard] },\r\n  { path: 'accountSettings', component: AccountComponent, canActivate: [AuthGuard] },\r\n  { path: 'accountSettings/parserInformation', component: ParserInformationComponent, canActivate: [AuthGuard] },\r\n  { path: 'transactionManagement', component: TransactionComponent, canActivate: [AuthGuard] },\r\n  { path: 'budgetSettings', component: BudgetSettingsComponent, canActivate: [AuthGuard] },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgxCsvParserModule } from 'ngx-csv-parser';\r\nimport { TransactionComponent } from './transaction.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { TransactionImporterComponent } from './transaction-importer/transaction-importer.component';\r\nimport { TransactionListComponent } from './transaction-list/transaction-list.component';\r\nimport { ModalAddTransactionComponent } from './modal-add-transaction/modal-add-transaction.component';\r\nimport { TransactionModalComponent } from './transaction-modal/transaction-modal.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [TransactionComponent, TransactionImporterComponent, TransactionListComponent, ModalAddTransactionComponent, TransactionModalComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    NgxCsvParserModule,\r\n  ]\r\n})\r\nexport class TransactionModule { }\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Budget } from '../../shared/models/budget';\r\nimport { Parser } from '../../shared/models/parser';\r\nimport { Transaction } from '../../shared/models/transaction';\r\nimport { TransactionService } from '../../shared/services/transaction.service';\r\n\r\n@Component({\r\n  selector: 'app-transaction-modal',\r\n  templateUrl: './transaction-modal.component.html',\r\n  styleUrls: ['./transaction-modal.component.scss']\r\n})\r\nexport class TransactionModalComponent implements OnInit {\r\n\r\n  @Input() trans: Transaction;\r\n  @Input() budgets: Budget[];\r\n  @Input() parsers: Parser[];\r\n  transForm: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder, private ts: TransactionService) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.budgets);\r\n    this.transForm = this.fb.group({\r\n      transCategory: [this.trans.transCategory, Validators.required],\r\n      transCustomCategory: [''],\r\n      transNote: [this.trans.transNote],\r\n    });\r\n\r\n  }\r\n\r\n  updateTransaction(): void {\r\n    const customCat = this.transForm.get('transCustomCategory').value;\r\n    if ( customCat !== ''){\r\n      this.trans.transCategory = customCat;\r\n    } else {\r\n      this.trans.transCategory = this.transForm.get('transCategory').value;\r\n    }\r\n    this.trans.transNote = this.transForm.get('transNote').value;\r\n    this.ts.updateTransaction(this.trans);\r\n  }\r\n\r\n}\r\n","<div class=\"container my-3\">\r\n  <form [formGroup]=\"transForm\" (ngSubmit)=\"updateTransaction()\">\r\n    <div class=\"row\">\r\n      <div class=\"col-sm-12 col-md-6\">\r\n        <div class=\"form-group\">\r\n          <label>Category</label>\r\n          <select class=\"form-select\" formControlName=\"transCategory\">\r\n            <option value=\"Uncategorized\">Uncategorized</option>\r\n            <option *ngFor=\"let budget of budgets\">{{budget.categoryName}}</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-12 col-md-6\">\r\n        <div class=\"form-group\">\r\n          <label>Custom Category</label>\r\n          <input type=\"text\" class=\"form-control\" formControlName=\"transCustomCategory\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-sm-12\">\r\n        <div class=\"form-group\">\r\n          <label>Note</label>\r\n          <textarea class=\"form-control\" formControlName=\"transNote\" style=\"height: 100px\">\r\n            {{trans.transNote}}\r\n          </textarea>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <button class=\"btn btn-success col mx-3 mt-3\" type=\"submit\" [disabled]=\"!transForm.valid\">Update transaction</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}